# Docker Compose configuration for PR Validation System

version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: pr-validation-system:latest
    container_name: pr-validation-api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - API_KEY=${API_KEY}
      - AZURE_DEVOPS_PAT=${AZURE_DEVOPS_PAT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=postgresql://postgres:password@db:5432/pr_validation
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ../logs:/app/logs
      - ../data:/app/data
    depends_on:
      - db
      - redis
    networks:
      - pr-validation-network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: pr-validation-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=pr_validation
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - pr-validation-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: pr-validation-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - pr-validation-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: pr-validation-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - pr-validation-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: pr-validation-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - pr-validation-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: pr-validation-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    networks:
      - pr-validation-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  pr-validation-network:
    driver: bridge